#!/usr/bin/env bash
######################################################################
# @file replaceemojis
# @brief Replace specific emojis in markdown files
# @description
# Replaces emoji characters in all markdown files:
# - "Face Holding Back Tears" (ü•π) ‚Üí "Crying Face" (üò¢)
# - "Smiling Face with Hearts" (ü•∞) ‚Üí "Heart Eyes" (üòç)

#######################################
# Main function
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   None
# Returns:
#   0 on success, non-zero on error
#######################################
function main() {
  local -r files=(./**/*.md ./*.md)

  for file in "${files[@]}"; do
    [[ -f "$file" ]] || continue

    # Replace emojis
    sed -i 's/ü•π/üò¢/g' "$file"
    sed -i 's/ü•∞/üòç/g' "$file"
  done
}

#######################################
# Print script version
# Globals:
#   VERSION
# Arguments:
#   None
# Outputs:
#   Version number to STDOUT
# Returns:
#   None
#######################################
function version() {
  printf "%s\n" "$VERSION"
}

# --- Constants ---
readonly VERSION="1.0.0"

# --- Main Execution ---
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  case "${1:-}" in
    -v | --version)
      version
      exit 0
      ;;
    -h | --help)
      printf "Usage: %s [options]\n" "$(basename "$0")"
      printf "Options:\n"
      printf "  -v, --version  Show version\n"
      printf "  -h, --help     Show this help\n"
      exit 0
      ;;
    *)
      main "$@"
      ;;
  esac
fi
