#!/usr/bin/env bash
# shellcheck disable=SC2317
require() {
  hash "$@" || exit
}

usage() {
  echo "Usage:"
  echo "$0 [dir]"
  echo "dir - directory in which list of files to compact exists"
  echo "The program will look for a compact.txt file in the specified"
  echo "directory. If it exists, it will read it and create a merged"
  echo "representation of the listed files to stdout."
  echo "If no directory is specified, the current directory is used."
  exit 1
}

isvalid() {
  test -d "$1" && test -e "${1}/${compactfile}"
}

set -euo pipefail
shopt -s inherit_errexit
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
#shellcheck disable=SC1091
source "$SCRIPT_DIR/vidmd.sh"
require m4 mktemp awk rm

thisdir="$(pwd)"

declare -r compactfile="compact.txt"

declare -r dir="${1:-$thisdir}"

if isvalid "$dir"; then
  (
    cd "$dir" || exit
    temp="$(mktemp -t compact.XXXXXX)"
    echo "changequote(\`{{', \`}}')" > "$temp"
    readarray -t files < "$compactfile"
    for fname in "${files[@]}"; do
      if [[ -e "$fname" ]]; then
        echo "include({{$fname}})" >> "$temp"
      fi
    done
    tmp2="$(mktemp -t compact.XXXXXX)"
    if ! m4 "$temp" > "$tmp2"; then
      echo "Error running m4"
      exit 1
    fi
    if ! awk 'NF {p=1} p' <<< "$(< "$tmp2")"; then
      echo "Error running awk"
      exit 1
    fi
    rm -f "$tmp2" "$temp" &> /dev/null
  )
else
  usage
fi
