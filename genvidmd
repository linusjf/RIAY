#!/usr/bin/env bash
# Generate markdown for embedding YouTube videos with overlay images
# Creates markdown link with video thumbnail and proper formatting

set -euo pipefail
shopt -s inherit_errexit

# shellcheck disable=SC2155
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
# shellcheck disable=SC1091
source "${SCRIPT_DIR}/require.sh"
# shellcheck disable=SC1091
source "${SCRIPT_DIR}/internet.sh"
# shellcheck disable=SC1091
source "${SCRIPT_DIR}/vidmd.sh"

usage() {
  cat << EOF
Usage: ${0##*/} [-d|--debug] vid caption pathtoimg

Generate markdown for embedding YouTube videos with overlay images.

Options:
  -d, --debug      Enable debug output
Arguments:
  vid       YouTube video ID (11 characters)
  caption   Video title/description
  pathtoimg Relative path to generated JPEG image

Output:
  Markdown formatted link with embedded image to STDOUT
EOF
  exit 1
}

validate_inputs() {
  if [[ $# -ne 3 ]]; then
    echo "Error: Requires exactly 3 arguments" >&2
    usage
  fi

  if ! validate_vid "$1"; then
    echo "Error: Invalid YouTube video ID format: '$1'" >&2
    return 1
  fi

  if [[ -z "$2" ]]; then
    echo "Error: Caption cannot be empty" >&2
    return 1
  fi

  local img_dir
  img_dir="$(dirname "$3")"
  if [[ ! -d "$img_dir" ]] || [[ ! -w "$img_dir" ]]; then
    echo "Error: Directory '${img_dir}' does not exist or is not writable" >&2
    return 1
  fi
}

generate_markdown() {
  local vid="$1"
  local caption="$2"
  local img_path="$3"
  local vidurl imgurl root

  vidurl="https://youtu.be/${vid}"
  root="$(getroot)"
  imgurl="https://raw.githubusercontent.com/${GITHUB_USERNAME}/${root}/refs/heads/main/${img_path}"

  printf "[![%s](%s)](%s \"%s\")\n" "$caption" "$imgurl" "$vidurl" "$caption"
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    -d | --debug)
      set -x
      shift
      ;;
    *)
      break
      ;;
  esac
done

main() {
  # Check dependencies
  require_commands getroot validate_vid

  # Validate environment
  require_vars GITHUB_USERNAME

  # Validate inputs
  if ! validate_inputs "$@"; then
    exit 1
  fi

  # Check internet connection
  checkinternet || {
    echo "Error: No internet connection detected" >&2
    exit 1
  }

  # Generate overlay image
  if ! "${SCRIPT_DIR}/overlayimg" "$1" "$3"; then
    echo "Error: Failed to generate overlay image for video ID '$1'" >&2
    exit 1
  fi

  # Verify image creation
  if [[ ! -f "$3" ]]; then
    echo "Error: Image file '$3' was not generated correctly" >&2
    exit 1
  fi

  # Output markdown
  generate_markdown "$@"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
