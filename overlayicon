#!/usr/bin/env bash
######################################################################
# Applies a play button overlay to JPEG images
######################################################################

set -euo pipefail
shopt -s inherit_errexit

readonly SUCCESS=0
readonly FAILURE=1
readonly ICON_FILE="play-button.png"
readonly ICON_SIZE="256x256"
readonly ICON_OFFSET="+32+0"
readonly COMMENT="Play Icon Added"

######################################################################
# Verify required commands are available
######################################################################
require() {
  for cmd in "$@"; do
    if ! command -v "${cmd}" > /dev/null 2>&1; then
      die "Required command '${cmd}' not found in PATH"
    fi
  done
}

######################################################################
# Display error message and exit with failure status
######################################################################
die() {
  printf "Error: %s\n" "$1" >&2
  exit "${FAILURE}"
}

######################################################################
# Display usage information
######################################################################
usage() {
  cat << EOF
Usage: ${0##*/} [OPTIONS] FILE
Options:
  -d, --debug    Enable debug output (set -x)
  
Arguments:
  FILE  Path to JPEG image file to overlay
EOF
  exit "${SUCCESS}"
}

######################################################################
# Verify file is a valid JPEG
######################################################################
is_jpeg_file() {
  file "$1" | grep -q 'JPEG'
}

######################################################################
# Check if file already has play icon comment
######################################################################
has_play_icon() {
  exiftool -Comment "$1" 2> /dev/null | grep -q "${COMMENT}"
}

######################################################################
# Main function
######################################################################
main() {
  # Parse options
  local debug_mode=false
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -d | --debug)
        debug_mode=true
        shift
        ;;
      -*)
        usage
        ;;
      *)
        break
        ;;
    esac
  done

  # Enable debug if requested
  if [[ "${debug_mode}" == true ]]; then
    set -x
  fi

  # Verify dependencies
  require gm mv file grep mktemp exiftool

  # Validate arguments
  if [[ $# -ne 1 ]]; then
    die "Missing file argument"
  fi

  local file_path="$1"

  # Check file exists
  if [[ ! -f "${file_path}" ]]; then
    die "File '${file_path}' not found"
  fi

  # Check file type
  if ! is_jpeg_file "${file_path}"; then
    die "'${file_path}' is not a valid JPEG file"
  fi

  # Check if already processed
  if has_play_icon "${file_path}"; then
    echo "File '${file_path}' already has play icon overlay"
    exit "${SUCCESS}"
  fi

  # Check overlay icon exists
  if [[ ! -f "${ICON_FILE}" ]]; then
    die "Overlay icon '${ICON_FILE}' not found"
  fi

  # Create temporary file
  local tmp_file
  tmp_file="$(mktemp)" || die "Failed to create temporary file"

  # Apply overlay
  if ! gm composite -gravity center -geometry "${ICON_SIZE}${ICON_OFFSET}" \
    "${ICON_FILE}" "${file_path}" "${tmp_file}"; then
    rm -f "${tmp_file}"
    die "Failed to overlay icon onto '${file_path}'"
  fi

  # Replace original file
  if ! mv "${tmp_file}" "${file_path}"; then
    rm -f "${tmp_file}"
    die "Failed to replace original file with overlaid image"
  fi

  # Add exif data to file
  if ! exiftool -overwrite_original -Comment="${COMMENT}" "${file_path}"; then
    err "Failed to add comment in exif data to ${file_path}"
  fi

}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
