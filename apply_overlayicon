#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

readonly VERSION="1.0.0"
readonly SCRIPT_NAME="${0##*/}"
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd -P)"
source "${SCRIPT_DIR}/vidmd.sh"
source "${SCRIPT_DIR}/require.sh"
source "${SCRIPT_DIR}/util.sh"
source "${SCRIPT_DIR}/lockconfig.sh"
lockconfig::lock_config_vars "${SCRIPT_DIR}/config.env"

function version() {
  printf "%s\n" "$VERSION"
}

function usage() {
  cat << EOF
Usage: $SCRIPT_NAME [OPTIONS] [root_directory]

Options:
  -h, --help      Show this help message
  -v, --verbose   Enable verbose output
  -q, --quiet     Suppress output
  --version       Show version information

Arguments:
  root_directory  Directory to search for DayXXX.jpg files (default: current directory)
EOF
}

function validate_environment() {
  require_commands parallel find tee
}

function main() {
  local root_dir="${1:-.}"

  validate_environment || return 1

  mapfile -t imgfiles < <(find "$root_dir" -type f -regextype posix-extended -regex '.*/Day[0-9]{3}\.jpg' -print)
  parallel vidmd::overlayicon ::: "${imgfiles[@]}"
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    -h | --help)
      usage
      exit 0
      ;;
    -v | --verbose)
      verbose=true
      shift
      ;;
    -q | --quiet)
      quiet=true
      shift
      ;;
    --version)
      version
      exit 0
      ;;
    --)
      shift
      break
      ;;
    -*)
      err "Unknown option: $1"
      usage
      exit 1
      ;;
    *) break ;;
  esac
done

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  if "$LOGGING"; then
    timestamp=$(date +"%Y%m%d_%H%M%S")
    {
      main "$@" 2> >(tee -a "${SCRIPT_NAME%.*}_${timestamp}.stderr.log" >&2)
    } | tee -a "${SCRIPT_NAME%.*}_${timestamp}.stdout.log"
  else
    main "$@"
  fi
fi
