#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

readonly VERSION="1.0.0"
readonly SCRIPT_NAME="${0##*/}"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd -P)"
source "${SCRIPT_DIR}/lockconfig.sh"
lock_config_vars "${SCRIPT_DIR}/config.env"

function version() {
  printf "%s\n" "$VERSION"
}

function usage() {
  cat << EOF
Usage: $SCRIPT_NAME [OPTIONS] [root_directory]

Options:
  -h, --help      Show this help message
  -v, --verbose   Enable verbose output
  -q, --quiet     Suppress output
  --version       Show version information

Arguments:
  root_directory  Directory to search for DayXXX.jpg files (default: current directory)
EOF
}

function err() {
  [[ "${quiet:-false}" != "true" ]] && >&2 printf "%s\n" "$*"
}

function log() {
  [[ "${verbose:-false}" == "true" ]] && printf "%s %s %s\n" "$(date -u +"%Y-%m-%dT%H:%M:%S.%NZ")" $$ "$*"
}

function validate_environment() {
  local script_dir
  script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"

  readonly OVERLAY_SCRIPT="${script_dir}/overlayicon"

  if [[ ! -x "$OVERLAY_SCRIPT" ]]; then
    err "Error: 'overlayicon' not found or not executable at $OVERLAY_SCRIPT"
    return 1
  fi
}

function main() {
  local root_dir="${1:-.}"

  validate_environment || return 1

  find "$root_dir" -type f -regextype posix-extended -regex '.*/Day[0-9]{3}\.jpg' \
    -print0 | xargs -0 -n1 -P4 -I{} "$OVERLAY_SCRIPT" "{}"
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    -h | --help)
      usage
      exit 0
      ;;
    -v | --verbose)
      verbose=true
      shift
      ;;
    -q | --quiet)
      quiet=true
      shift
      ;;
    --version)
      version
      exit 0
      ;;
    --)
      shift
      break
      ;;
    -*)
      err "Unknown option: $1"
      usage
      exit 1
      ;;
    *) break ;;
  esac
done

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  if "$LOGGING"; then
    timestamp=$(date +"%Y%m%d_%H%M%S")
    {
      main "$@" 2> >(tee -a "${SCRIPT_NAME%.*}_${timestamp}.stderr.log" >&2)
    } | tee -a "${SCRIPT_NAME%.*}_${timestamp}.stdout.log"
  else
    main "$@"
  fi
fi
