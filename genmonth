#!/usr/bin/env bash
# Generate monthly markdown file with video index and table of contents

set -euo pipefail
shopt -s inherit_errexit

# shellcheck disable=SC2155
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
# shellcheck disable=SC1091
source "${SCRIPT_DIR}/vidmd.sh"
DRY_RUN=false

usage() {
  cat << EOF
Usage: ${0##*/} [-n|--dry-run] [-d|--debug] month year

Generate monthly markdown file with video index and table of contents.

Options:
  -n, --dry-run    Show what would happen without making changes
  -d, --debug      Enable debug output
Arguments:
  month            Month number (1-12)
  year             4-digit year
EOF
  exit 1
}

require() {
  hash "$@" || {
    echo "Error: Required command not found: $*" >&2
    exit 127
  }
}

validate_inputs() {
  local month="$1"
  local year="$2"

  if ! isnumeric "$month"; then
    echo "Error: Month must be a number" >&2
    return 1
  fi

  if ! isnumeric "$year"; then
    echo "Error: Year must be a number" >&2
    return 1
  fi

  if ((${#year} != 4)); then
    echo "Error: Year must be 4 digits" >&2
    return 1
  fi

  month=$((10#$month))
  if ((month < 1 || month > 12)); then
    echo "Error: Month must be between 1 and 12" >&2
    return 1
  fi

  return 0
}

generate_month_file() {
  local month="$1"
  local year="$2"
  local month_name monthmd

  month_name="$(monthfromnumber "$month")"
  monthmd="${month_name}${year}.md"

  if ! "${SCRIPT_DIR}/compact" "$month_name" >| "$monthmd"; then
    echo "Error: Failed to generate compact index" >&2
    return 1
  fi

  if ! "${SCRIPT_DIR}/gentoc" "$monthmd"; then
    echo "Error: Failed to generate table of contents" >&2
    return 1
  fi

  if ! sed -i '/\S/,$!d' "$monthmd"; then
    echo "Error: Failed to clean up file" >&2
    return 1
  fi

  return 0
}

dry_run() {
  local month="$1"
  local year="$2"
  local month_name monthmd

  month_name="$(monthfromnumber "$month")"
  monthmd="${month_name}${year}.md"

  cat << EOF
DRY RUN: Would process month $month_name ($(monthfromnumber "$month")) for year $year
Would generate these files:
  - $monthmd (monthly markdown file)
Would run these commands:
  - ${SCRIPT_DIR}/compact "$month_name" >| "$monthmd"
  - ${SCRIPT_DIR}/gentoc "$monthmd"
  - sed -i '/\\S/,\$!d' "$monthmd"
No files actually modified
EOF
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    -n | --dry-run)
      DRY_RUN=true
      shift
      ;;
    -d | --debug)
      set -x
      shift
      ;;
    *)
      break
      ;;
  esac
done

main() {
  local month year

  # Validate arguments
  if [[ $# -ne 2 ]]; then
    usage
  fi

  month="$1"
  year="$2"

  if ! validate_inputs "$month" "$year"; then
    usage
  fi

  require date markdown-toc

  if $DRY_RUN; then
    dry_run "$month" "$year"
    exit 0
  fi

  if ! generate_month_file "$month" "$year"; then
    exit 1
  fi
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
