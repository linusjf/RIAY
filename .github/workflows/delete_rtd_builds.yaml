---
name: Delete old Read the Docs builds
on:
  schedule:
    # Runs daily at 2 AM UTC
    - cron: "0 2 * * *"
  # Allows manual trigger
  workflow_dispatch:
jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Delete builds older than 7 days
        env:
          RTD_TOKEN: ${{ secrets.RTD_TOKEN }}
          RTD_PROJECT_SLUG: riay
          DAYS_OLD: 7
        run: |
          set -e
          BASE_URL="https://readthedocs.org/api/v3"
          CUTOFF_DATE=$(date -u -d "$DAYS_OLD days ago" +"%Y-%m-%dT%H:%M:%S")
          URL="$BASE_URL/projects/$RTD_PROJECT_SLUG/builds/"

          echo "Fetching builds older than $DAYS_OLD days for project: $RTD_PROJECT_SLUG"
          while [ -n "$URL" ]; do
            RESPONSE=$(curl -s -H "Authorization: Token $RTD_TOKEN" "$URL")
            echo "$RESPONSE" | jq -c '.results[]' | while read -r build; do
              BUILD_ID=$(echo "$build" | jq -r '.id')
              BUILD_DATE=$(echo "$build" | jq -r '.date' | cut -d. -f1)

              if [[ "$BUILD_DATE" < "$CUTOFF_DATE" ]]; then
                DELETE_URL="$BASE_URL/builds/$BUILD_ID/"
                echo "Deleting build $BUILD_ID from $BUILD_DATE"
                curl -s -X DELETE -H "Authorization: Token $RTD_TOKEN" "$DELETE_URL"
              fi
            done
            URL=$(echo "$RESPONSE" | jq -r '.next')
          done
          echo "Cleanup complete."
