#!/usr/bin/env bash

# Resolve script directory
if command -v realpath > /dev/null 2>&1; then
  readonly SCRIPT_DIR="$(dirname "$(realpath "$0")")"
else
  readonly SCRIPT_DIR="$(cd -- "$(dirname -- "$0")" && pwd -P)"
fi
source "${SCRIPT_DIR}/lib/git.sh"
source "${SCRIPT_DIR}/lib/require.sh"
source "${SCRIPT_DIR}/lib/lockconfig.sh"
lockconfig::lock_config_vars "${SCRIPT_DIR}/config.env"
# Check for required environment variables
if [ -z "$YEAR" ]; then
  echo "Error: YEAR environment variable not set."
  exit 1
fi

if [ -z "$YOUTUBE_API_KEY" ]; then
  echo "Error: YOUTUBE_API_KEY environment variable not set."
  exit 1
fi

API_KEY="$YOUTUBE_API_KEY"

# Ensure required tools are installed
for cmd in jq curl git date tee; do
  command -v $cmd > /dev/null 2>&1 || {
    echo "$cmd is required but not installed."
    exit 1
  }
done

GITHUB_REPO=$(git::get_github_repo)
# Handle input (file or stdin)
if [ -n "$1" ]; then
  INPUT_STREAM=$(cat "$1")
else
  INPUT_STREAM=$(cat)
fi

# Day counter
DAY_NUM=1

# Process each video ID
echo "$INPUT_STREAM" | while IFS= read -r VIDEO_ID; do
  printf -v DAY_STRING "Day%03d" "$DAY_NUM"
  MONTH=$(date -d "${YEAR}-01-01 +$((DAY_NUM - 1)) days" +"%B")
  FULL_DATE=$(date -d "${YEAR}-01-01 +$((DAY_NUM - 1)) days" +"%B %d, %Y")

  # Create directories for month and jpgs
  mkdir -p "$MONTH/jpgs"
  mkdir -p "$MONTH"

  echo "Processing $DAY_STRING ($VIDEO_ID) for $MONTH..."

  # Call YouTube API to get video details
  API_URL="https://www.googleapis.com/youtube/v3/videos?part=snippet&id=$VIDEO_ID&key=$API_KEY"
  RESPONSE=$(curl -s "$API_URL")

  # Extract title and largest thumbnail
  THUMBNAIL_URL=$(echo "$RESPONSE" | jq -r '
        .items[0].snippet.thumbnails |
        to_entries | sort_by(.value.width) | last.value.url
    ')
  TITLE=$(echo "$RESPONSE" | jq -r '.items[0].snippet.title')

  # Download thumbnail image
  if [ -n "$THUMBNAIL_URL" ]; then
    curl -s "$THUMBNAIL_URL" -o "$MONTH/jpgs/${DAY_STRING}.jpg"
  else
    echo "Warning: No thumbnail found for $VIDEO_ID"
    TITLE="(No Title Found)"
  fi

  # Generate the shortened YouTube URL
  SHORT_YOUTUBE_URL="https://youtu.be/${VIDEO_ID}"

  # Write markdown with video link and thumbnail
  {
    echo "## ${FULL_DATE}"
    echo
    echo "### ${TITLE}"
    echo
    echo "[![${TITLE}](https://raw.githubusercontent.com/${GITHUB_REPO}/refs/heads/main/${MONTH}/jpgs/${DAY_STRING}.jpg)](${SHORT_YOUTUBE_URL} \"${TITLE}\")"
  } > "$MONTH/${DAY_STRING}.md"

  echo "Saved: $MONTH/${DAY_STRING}.md and $MONTH/jpgs/${DAY_STRING}.jpg"

  ((DAY_NUM++))
done
