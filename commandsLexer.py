# Generated from commands.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,168,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,5,7,102,8,7,10,7,12,
        7,105,9,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,3,9,119,
        8,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,3,11,139,8,11,1,12,3,12,142,8,12,1,
        12,1,12,1,13,4,13,147,8,13,11,13,12,13,148,1,13,1,13,1,14,1,14,5,
        14,155,8,14,10,14,12,14,158,9,14,1,14,3,14,161,8,14,1,14,1,14,1,
        14,1,14,1,15,1,15,1,103,0,16,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,0,25,12,27,13,29,0,31,14,1,0,8,1,0,50,50,1,0,
        48,57,1,0,48,54,1,0,48,53,1,0,49,50,1,0,49,57,3,0,9,10,13,13,32,
        32,2,0,10,10,13,13,177,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,1,33,1,0,0,0,3,42,1,0,0,0,5,51,1,0,0,0,7,59,1,
        0,0,0,9,66,1,0,0,0,11,73,1,0,0,0,13,87,1,0,0,0,15,99,1,0,0,0,17,
        108,1,0,0,0,19,118,1,0,0,0,21,120,1,0,0,0,23,138,1,0,0,0,25,141,
        1,0,0,0,27,146,1,0,0,0,29,152,1,0,0,0,31,166,1,0,0,0,33,34,5,97,
        0,0,34,35,5,100,0,0,35,36,5,100,0,0,36,37,5,118,0,0,37,38,5,105,
        0,0,38,39,5,100,0,0,39,40,5,101,0,0,40,41,5,111,0,0,41,2,1,0,0,0,
        42,43,5,103,0,0,43,44,5,101,0,0,44,45,5,110,0,0,45,46,5,109,0,0,
        46,47,5,111,0,0,47,48,5,110,0,0,48,49,5,116,0,0,49,50,5,104,0,0,
        50,4,1,0,0,0,51,52,5,108,0,0,52,53,5,105,0,0,53,54,5,110,0,0,54,
        55,5,116,0,0,55,56,5,97,0,0,56,57,5,108,0,0,57,58,5,108,0,0,58,6,
        1,0,0,0,59,60,5,115,0,0,60,61,5,116,0,0,61,62,5,105,0,0,62,63,5,
        116,0,0,63,64,5,99,0,0,64,65,5,104,0,0,65,8,1,0,0,0,66,67,5,103,
        0,0,67,68,5,101,0,0,68,69,5,110,0,0,69,70,5,116,0,0,70,71,5,111,
        0,0,71,72,5,99,0,0,72,10,1,0,0,0,73,74,5,97,0,0,74,75,5,100,0,0,
        75,76,5,100,0,0,76,77,5,118,0,0,77,78,5,105,0,0,78,79,5,100,0,0,
        79,80,5,101,0,0,80,81,5,111,0,0,81,82,5,116,0,0,82,83,5,111,0,0,
        83,84,5,100,0,0,84,85,5,97,0,0,85,86,5,121,0,0,86,12,1,0,0,0,87,
        88,5,97,0,0,88,89,5,100,0,0,89,90,5,100,0,0,90,91,5,105,0,0,91,92,
        5,109,0,0,92,93,5,103,0,0,93,94,5,116,0,0,94,95,5,111,0,0,95,96,
        5,100,0,0,96,97,5,97,0,0,97,98,5,121,0,0,98,14,1,0,0,0,99,103,5,
        34,0,0,100,102,9,0,0,0,101,100,1,0,0,0,102,105,1,0,0,0,103,104,1,
        0,0,0,103,101,1,0,0,0,104,106,1,0,0,0,105,103,1,0,0,0,106,107,5,
        34,0,0,107,16,1,0,0,0,108,109,7,0,0,0,109,110,7,1,0,0,110,111,7,
        1,0,0,111,112,7,1,0,0,112,18,1,0,0,0,113,114,5,49,0,0,114,119,2,
        48,50,0,115,116,5,48,0,0,116,119,2,49,57,0,117,119,2,49,57,0,118,
        113,1,0,0,0,118,115,1,0,0,0,118,117,1,0,0,0,119,20,1,0,0,0,120,121,
        3,23,11,0,121,22,1,0,0,0,122,123,5,51,0,0,123,124,5,54,0,0,124,125,
        1,0,0,0,125,139,7,2,0,0,126,127,5,51,0,0,127,128,7,3,0,0,128,139,
        7,1,0,0,129,130,7,4,0,0,130,131,7,1,0,0,131,139,7,1,0,0,132,133,
        5,48,0,0,133,134,7,5,0,0,134,139,7,1,0,0,135,136,5,48,0,0,136,137,
        5,48,0,0,137,139,7,5,0,0,138,122,1,0,0,0,138,126,1,0,0,0,138,129,
        1,0,0,0,138,132,1,0,0,0,138,135,1,0,0,0,139,24,1,0,0,0,140,142,5,
        13,0,0,141,140,1,0,0,0,141,142,1,0,0,0,142,143,1,0,0,0,143,144,5,
        10,0,0,144,26,1,0,0,0,145,147,7,6,0,0,146,145,1,0,0,0,147,148,1,
        0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,150,1,0,0,0,150,151,6,
        13,0,0,151,28,1,0,0,0,152,156,5,35,0,0,153,155,8,7,0,0,154,153,1,
        0,0,0,155,158,1,0,0,0,156,154,1,0,0,0,156,157,1,0,0,0,157,160,1,
        0,0,0,158,156,1,0,0,0,159,161,5,13,0,0,160,159,1,0,0,0,160,161,1,
        0,0,0,161,162,1,0,0,0,162,163,5,10,0,0,163,164,1,0,0,0,164,165,6,
        14,1,0,165,30,1,0,0,0,166,167,9,0,0,0,167,32,1,0,0,0,8,0,103,118,
        138,141,148,156,160,2,6,0,0,7,12,0
    ]

class commandsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    STRING = 8
    YEAR = 9
    MONTH = 10
    DAY_NUMBER = 11
    NEWLINE = 12
    WS = 13
    ANY = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'addvideo'", "'genmonth'", "'lintall'", "'stitch'", "'gentoc'", 
            "'addvideotoday'", "'addimgtoday'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "YEAR", "MONTH", "DAY_NUMBER", "NEWLINE", "WS", "ANY" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "STRING", "YEAR", "MONTH", "DAY_NUMBER", "THREE_DIGIT", 
                  "NEWLINE", "WS", "COMMENT", "ANY" ]

    grammarFileName = "commands.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


