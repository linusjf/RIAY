# Generated from commands.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,9,86,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
        3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,5,4,57,8,4,10,4,12,4,60,
        9,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,3,6,73,8,6,1,7,3,
        7,76,8,7,1,7,1,7,1,8,4,8,81,8,8,11,8,12,8,82,1,8,1,8,1,58,0,9,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,1,0,3,1,0,50,50,1,0,48,57,
        3,0,9,10,13,13,32,32,89,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,1,19,1,0,0,0,3,28,1,0,0,0,5,37,1,0,0,0,7,45,1,0,0,0,9,54,
        1,0,0,0,11,63,1,0,0,0,13,72,1,0,0,0,15,75,1,0,0,0,17,80,1,0,0,0,
        19,20,5,97,0,0,20,21,5,100,0,0,21,22,5,100,0,0,22,23,5,118,0,0,23,
        24,5,105,0,0,24,25,5,100,0,0,25,26,5,101,0,0,26,27,5,111,0,0,27,
        2,1,0,0,0,28,29,5,103,0,0,29,30,5,101,0,0,30,31,5,110,0,0,31,32,
        5,109,0,0,32,33,5,111,0,0,33,34,5,110,0,0,34,35,5,116,0,0,35,36,
        5,104,0,0,36,4,1,0,0,0,37,38,5,108,0,0,38,39,5,105,0,0,39,40,5,110,
        0,0,40,41,5,116,0,0,41,42,5,97,0,0,42,43,5,108,0,0,43,44,5,108,0,
        0,44,6,1,0,0,0,45,46,5,103,0,0,46,47,5,101,0,0,47,48,5,110,0,0,48,
        49,5,118,0,0,49,50,5,105,0,0,50,51,5,100,0,0,51,52,5,109,0,0,52,
        53,5,100,0,0,53,8,1,0,0,0,54,58,5,34,0,0,55,57,9,0,0,0,56,55,1,0,
        0,0,57,60,1,0,0,0,58,59,1,0,0,0,58,56,1,0,0,0,59,61,1,0,0,0,60,58,
        1,0,0,0,61,62,5,34,0,0,62,10,1,0,0,0,63,64,7,0,0,0,64,65,7,1,0,0,
        65,66,7,1,0,0,66,67,7,1,0,0,67,12,1,0,0,0,68,69,5,49,0,0,69,73,2,
        48,50,0,70,71,5,48,0,0,71,73,2,49,57,0,72,68,1,0,0,0,72,70,1,0,0,
        0,73,14,1,0,0,0,74,76,5,13,0,0,75,74,1,0,0,0,75,76,1,0,0,0,76,77,
        1,0,0,0,77,78,5,10,0,0,78,16,1,0,0,0,79,81,7,2,0,0,80,79,1,0,0,0,
        81,82,1,0,0,0,82,80,1,0,0,0,82,83,1,0,0,0,83,84,1,0,0,0,84,85,6,
        8,0,0,85,18,1,0,0,0,5,0,58,72,75,82,1,6,0,0
    ]

class commandsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    STRING = 5
    YEAR = 6
    MONTH_DIGIT = 7
    NEWLINE = 8
    WS = 9

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'addvideo'", "'genmonth'", "'lintall'", "'genvidmd'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "YEAR", "MONTH_DIGIT", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "STRING", "YEAR", "MONTH_DIGIT",
                  "NEWLINE", "WS" ]

    grammarFileName = "commands.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None
