# Generated from commands.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,152,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,5,6,84,8,6,10,6,12,6,87,9,6,1,6,1,
        6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,3,8,101,8,8,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,114,8,9,1,9,1,9,1,9,1,9,1,
        9,1,9,3,9,122,8,9,1,9,3,9,125,8,9,1,10,3,10,128,8,10,1,10,1,10,1,
        11,4,11,133,8,11,11,11,12,11,134,1,11,1,11,1,12,1,12,5,12,141,8,
        12,10,12,12,12,144,9,12,1,12,3,12,147,8,12,1,12,1,12,1,12,1,12,1,
        85,0,13,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
        25,0,1,0,8,1,0,50,50,1,0,48,57,1,0,48,54,1,0,48,53,1,0,49,50,1,0,
        49,57,3,0,9,10,13,13,32,32,2,0,10,10,13,13,165,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,1,27,1,0,0,0,3,36,1,0,0,0,5,45,1,0,0,0,7,53,1,0,
        0,0,9,60,1,0,0,0,11,67,1,0,0,0,13,81,1,0,0,0,15,90,1,0,0,0,17,100,
        1,0,0,0,19,124,1,0,0,0,21,127,1,0,0,0,23,132,1,0,0,0,25,138,1,0,
        0,0,27,28,5,97,0,0,28,29,5,100,0,0,29,30,5,100,0,0,30,31,5,118,0,
        0,31,32,5,105,0,0,32,33,5,100,0,0,33,34,5,101,0,0,34,35,5,111,0,
        0,35,2,1,0,0,0,36,37,5,103,0,0,37,38,5,101,0,0,38,39,5,110,0,0,39,
        40,5,109,0,0,40,41,5,111,0,0,41,42,5,110,0,0,42,43,5,116,0,0,43,
        44,5,104,0,0,44,4,1,0,0,0,45,46,5,108,0,0,46,47,5,105,0,0,47,48,
        5,110,0,0,48,49,5,116,0,0,49,50,5,97,0,0,50,51,5,108,0,0,51,52,5,
        108,0,0,52,6,1,0,0,0,53,54,5,115,0,0,54,55,5,116,0,0,55,56,5,105,
        0,0,56,57,5,116,0,0,57,58,5,99,0,0,58,59,5,104,0,0,59,8,1,0,0,0,
        60,61,5,103,0,0,61,62,5,101,0,0,62,63,5,110,0,0,63,64,5,116,0,0,
        64,65,5,111,0,0,65,66,5,99,0,0,66,10,1,0,0,0,67,68,5,97,0,0,68,69,
        5,100,0,0,69,70,5,100,0,0,70,71,5,118,0,0,71,72,5,105,0,0,72,73,
        5,100,0,0,73,74,5,101,0,0,74,75,5,111,0,0,75,76,5,116,0,0,76,77,
        5,111,0,0,77,78,5,100,0,0,78,79,5,97,0,0,79,80,5,121,0,0,80,12,1,
        0,0,0,81,85,5,34,0,0,82,84,9,0,0,0,83,82,1,0,0,0,84,87,1,0,0,0,85,
        86,1,0,0,0,85,83,1,0,0,0,86,88,1,0,0,0,87,85,1,0,0,0,88,89,5,34,
        0,0,89,14,1,0,0,0,90,91,7,0,0,0,91,92,7,1,0,0,92,93,7,1,0,0,93,94,
        7,1,0,0,94,16,1,0,0,0,95,96,5,49,0,0,96,101,2,48,50,0,97,98,5,48,
        0,0,98,101,2,49,57,0,99,101,2,49,57,0,100,95,1,0,0,0,100,97,1,0,
        0,0,100,99,1,0,0,0,101,18,1,0,0,0,102,103,5,51,0,0,103,104,5,54,
        0,0,104,105,1,0,0,0,105,125,7,2,0,0,106,107,5,51,0,0,107,108,7,3,
        0,0,108,125,7,1,0,0,109,110,7,4,0,0,110,111,7,1,0,0,111,125,7,1,
        0,0,112,114,5,48,0,0,113,112,1,0,0,0,113,114,1,0,0,0,114,115,1,0,
        0,0,115,116,7,5,0,0,116,125,7,1,0,0,117,118,5,48,0,0,118,119,5,48,
        0,0,119,125,7,5,0,0,120,122,5,48,0,0,121,120,1,0,0,0,121,122,1,0,
        0,0,122,123,1,0,0,0,123,125,7,5,0,0,124,102,1,0,0,0,124,106,1,0,
        0,0,124,109,1,0,0,0,124,113,1,0,0,0,124,117,1,0,0,0,124,121,1,0,
        0,0,125,20,1,0,0,0,126,128,5,13,0,0,127,126,1,0,0,0,127,128,1,0,
        0,0,128,129,1,0,0,0,129,130,5,10,0,0,130,22,1,0,0,0,131,133,7,6,
        0,0,132,131,1,0,0,0,133,134,1,0,0,0,134,132,1,0,0,0,134,135,1,0,
        0,0,135,136,1,0,0,0,136,137,6,11,0,0,137,24,1,0,0,0,138,142,5,35,
        0,0,139,141,8,7,0,0,140,139,1,0,0,0,141,144,1,0,0,0,142,140,1,0,
        0,0,142,143,1,0,0,0,143,146,1,0,0,0,144,142,1,0,0,0,145,147,5,13,
        0,0,146,145,1,0,0,0,146,147,1,0,0,0,147,148,1,0,0,0,148,149,5,10,
        0,0,149,150,1,0,0,0,150,151,6,12,1,0,151,26,1,0,0,0,10,0,85,100,
        113,121,124,127,134,142,146,2,6,0,0,7,11,0
    ]

class commandsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    STRING = 7
    YEAR = 8
    MONTH_DIGIT = 9
    DAY_NUMBER = 10
    NEWLINE = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'addvideo'", "'genmonth'", "'lintall'", "'stitch'", "'gentoc'", 
            "'addvideotoday'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "YEAR", "MONTH_DIGIT", "DAY_NUMBER", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "STRING", 
                  "YEAR", "MONTH_DIGIT", "DAY_NUMBER", "NEWLINE", "WS", 
                  "COMMENT" ]

    grammarFileName = "commands.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


