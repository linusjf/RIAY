#!/usr/bin/env bash
######################################################################
######################################################################

set -euo pipefail
shopt -s inherit_errexit

readonly SUCCESS=0
# shellcheck disable=SC2155
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd -P)"
source "${SCRIPT_DIR}/util.sh"
source "${SCRIPT_DIR}/lockconfig.sh"
lockconfig::lock_config_vars "${SCRIPT_DIR}/config.env"
######################################################################
######################################################################
usage() {
  cat << EOF
Usage: ${0##*/} [-d|--debug]
Processes video IDs from ${FNAME} and generates overlays

Options:
  -d, --debug      Enable debug output
EOF
  exit "${SUCCESS}"
}

######################################################################
######################################################################
main() {
  # Ensure the input file exists
  if [[ ! -f "${VIDEOS_FILE}" ]]; then
    die "File '${VIDEOS_FILE}' not found"
  fi

  # Ensure genoverlay is executable
  if [[ ! -x "${SCRIPT_DIR}/genoverlay" ]]; then
    die "'${SCRIPT_DIR}/genoverlay' script is missing or not executable"
  fi

  local count=0
  local vid

  # Process each line
  while IFS= read -r vid; do
    [[ -z "${vid}" ]] && continue # Skip empty lines
    ((count++))
    if ! "${SCRIPT_DIR}/genoverlay" "${vid}" "${count}"; then
      die "${SCRIPT_DIR}/genoverlay failed for video ID '${vid}'"
    fi
  done < "${VIDEOS_FILE}"

  exit "${SUCCESS}"
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    -d | --debug)
      set -x
      shift
      ;;
    *)
      break
      ;;
  esac
done

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
