#!/usr/bin/env bash

set -eEuo pipefail
shopt -s inherit_errexit

readonly VERSION="1.0.0"
readonly SCRIPT_NAME="$(basename "$0")"

trap trap_exit EXIT

trap_exit() {
  local exitcode="$?"
  exit $exitcode
}

# Print version information
# Globals: VERSION
# Arguments: none
# Outputs: version string to STDOUT
# Returns: none
version() {
  printf "%s\n" "$VERSION"
}

function main() {
  summarypromptfname="$1"
  doy="$(extract_doy "$summarypromptfname")"
  month="$(date::mfromdoy "$doy" "$YEAR")"
  # generate image from summary prompt
  json="$(cat "${summarypromptfname}")" &&
    prompt="$(imageprompt::get_prompt "$json")" &&
    caption="$(imageprompt::get_caption "$json")" &&
    generatedimage="$("${SCRIPT_DIR}/generateimagefromprompt" "$prompt")" &&
    jpegfname="${month}/jpgs/Day$(printf "%03d" "${doy#0}")Summary.jpg" &&
    cp "$generatedimage" "$jpegfname" &>/dev/null &&
    "${SCRIPT_DIR}/addimgtoday" "$jpegfname" "AI-Generated Image: ${caption}" "$doy" &&
    rm -f "$generatedimage" || exit $EXIT_FILE_GENERATION_FAILED
}
######################################################################
# Main script execution
######################################################################

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  # Resolve script directory
  if command -v realpath >/dev/null 2>&1; then
    readonly SCRIPT_DIR="$(dirname "$(realpath "$0")")"
  else
    readonly SCRIPT_DIR="$(cd -- "$(dirname -- "$0")" && pwd -P)"
  fi

  # Source required libraries
  source "${SCRIPT_DIR}/lib/require.sh"
  source "${SCRIPT_DIR}/lib/internet.sh"
  source "${SCRIPT_DIR}/lib/imageprompt.sh"
  source "${SCRIPT_DIR}/lib/date.sh"
  source "${SCRIPT_DIR}/lib/lockconfig.sh"
  lockconfig::lock_config_vars "${SCRIPT_DIR}/config.env"
  # Check requirements
  require_vars DEEPINFRA_TOKEN
  require_commands sed basename date tee mv date wc cat cp

  if "$LOGGING"; then
    timestamp=$(date +"%Y%m%d_%H%M%S")
    {
      main "$@" 2> >(tee -a "${SCRIPT_NAME%.*}_${timestamp}.stderr.log" >&2)
    } | tee -a "${SCRIPT_NAME%.*}_${timestamp}.stdout.log"
  else
    main "$@"
  fi
fi
