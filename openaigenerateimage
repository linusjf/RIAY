#!/usr/bin/env bash

# Generate images using OpenAI's DALL-E API
# Outputs path to generated JPEG image

set -euo pipefail
shopt -s inherit_errexit

readonly VERSION="1.0.0"
readonly SCRIPT_NAME="$(basename "$0")"

# Exit codes
readonly EXIT_SUCCESS=0
readonly EXIT_MISSING_ARG=1
readonly EXIT_API_FAILURE=2
readonly EXIT_DOWNLOAD_FAILURE=3
readonly EXIT_INVALID_RESPONSE=4

source "${SCRIPT_DIR}/lib/require.sh"
source "${SCRIPT_DIR}/lib/internet.sh"
source "${SCRIPT_DIR}/lib/util.sh"
source "${SCRIPT_DIR}/lib/curl.sh"
source "${SCRIPT_DIR}/lib/lockconfig.sh"
lockconfig::lock_config_vars "${SCRIPT_DIR}/config.env"
require_commands date jq tee mktemp gm
require_vars OPENAI_API_KEY

function usage() {
  cat << EOF
Usage: ${SCRIPT_NAME} "Your image prompt"

Options:
  -h, --help     Show this help message
  -v, --verbose  Enable verbose output
  --version      Show version information

Exit Codes:
  0 - Success
  1 - Missing required argument
  2 - API request failed
  3 - Image download failed
  4 - Invalid API response

Examples:
  ${SCRIPT_NAME} "A cute cat wearing sunglasses"
  ${SCRIPT_NAME} "Futuristic cityscape at night"
EOF
}

function version() {
  printf "%s\n" "${VERSION}"
}

function generate_image() {
  local prompt="$1"
  local timestamp="$(date +%s)"
  local output_path="$(mktemp -t "image_${timestamp}_XXX.jpg")"

  log "Generating image for prompt: ${prompt}"

  local request_data="{
          \"prompt\": \"${prompt}\",
          \"n\": 1,
          \"size\": \"1024x1024\",
          \"quality\": \"low\",
          \"output_format\": \"jpeg\",
          \"output_compression\": 50,
          \"response_format\": \"url\"
        }"

  local response=$(
    curl::request "https://api.openai.com/v1/images/generations" \
      "POST" \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer ${OPENAI_API_KEY}" \
      --data "${request_data}"
  ) || exit $EXIT_API_FAILURE

  local image_url=$(echo "${response}" | jq -r '.data[0].url')

  if [[ "${image_url}" == "null" ]]; then
    die "Failed to generate image. Response: ${response}" $EXIT_INVALID_RESPONSE
  fi

  log "Downloading image from: ${image_url}"
  curl::download "${image_url}" "${output_path}" || exit $EXIT_DOWNLOAD_FAILURE

  printf "%s\n" "${output_path}"
}

function main() {
  local prompt=""
  local start_time=$(date +%s.%N)

  while [[ $# -gt 0 ]]; do
    case "$1" in
      -h | --help)
        usage
        exit $EXIT_SUCCESS
        ;;
      --version)
        version
        exit $EXIT_SUCCESS
        ;;
      *)
        prompt="$1"
        shift
        ;;
    esac
  done

  if [[ -z "${prompt}" ]]; then
    usage >&2
    exit $EXIT_MISSING_ARG
  fi

  generate_image "${prompt}"
  local end_time=$(date +%s.%N)
  local elapsed=$(echo "$end_time - $start_time" | bc)
  printf "Execution time: %.2f seconds\n" "$elapsed" >&2
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  if "${LOGGING:-false}"; then
    timestamp=$(date +"%Y%m%d_%H%M%S")
    {
      main "$@" 2> >(tee -a "${SCRIPT_NAME%.*}_${timestamp}.stderr.log" >&2)
    } | tee -a "${SCRIPT_NAME%.*}_${timestamp}.stdout.log"
  else
    main "$@"
  fi
fi
