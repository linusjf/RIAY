#!/usr/bin/env bash
######################################################################
# overlayimg - Download YouTube thumbnail and overlay play icon
######################################################################

# shellcheck disable=SC1090,SC1091,SC2155
set -euo pipefail
shopt -s inherit_errexit

readonly SUCCESS=0
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd -P)"
readonly VIDMD_SCRIPT="${SCRIPT_DIR}/vidmd.sh"
readonly UTIL_SCRIPT="${SCRIPT_DIR}/util.sh"

######################################################################
######################################################################
usage() {
  cat << EOF
Usage: ${0##*/} [OPTIONS] vid output
Options:
  -d, --debug    Enable debug output (set -x)
  
Arguments:
  vid    - YouTube video ID
  output - Path to output JPEG file
EOF
  exit "${SUCCESS}"
}

######################################################################
######################################################################
main() {
  # Parse options
  local debug_mode=false
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -d | --debug)
        debug_mode=true
        shift
        ;;
      -*)
        usage
        ;;
      *)
        break
        ;;
    esac
  done

  # Enable debug if requested
  if [[ "${debug_mode}" == true ]]; then
    set -x
  fi

  # Validate arguments
  if [[ $# -ne 2 ]]; then
    usage
  fi

  local vid="$1"
  local output="$2"

  # Ensure vidmd.sh exists before sourcing
  if [[ ! -f "${VIDMD_SCRIPT}" ]]; then
    die "Required script '${VIDMD_SCRIPT}' not found"
  fi

  # Source vidmd.sh functions
  source "${VIDMD_SCRIPT}"

  # Ensure util.sh exists before sourcing
  if [[ ! -f "${UTIL_SCRIPT}" ]]; then
    die "Required script '${UTIL_SCRIPT}' not found"
  fi

  # Source util.sh functions
  source "${UTIL_SCRIPT}"

  # Validate output path
  if [[ -d "${output}" ]]; then
    die "Output path '${output}' is a directory"
  fi

  if [[ ! -d "$(dirname "${output}")" ]]; then
    die "Parent directory for output path does not exist"
  fi

  # Validate file extension
  if ! is_jpeg_extension "${output}"; then
    die "Output file must have a '.jpg' or '.jpeg' extension"
  fi

  # Download thumbnail
  if ! downloadthumbnail "${vid}" "${output}"; then
    die "Failed to download thumbnail for video ID '${vid}'"
  fi

  # Overlay icon
  if ! overlayicon "${output}"; then
    die "Failed to overlay icon on '${output}'"
  fi

  exit "${SUCCESS}"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
