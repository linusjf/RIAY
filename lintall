#!/usr/bin/env bash
######################################################################
# lintall - Lint and format all markdown files in the project
#
# This script runs markdownlint and mdformat on all markdown files
# in the project directory tree.
######################################################################

set -euo pipefail
shopt -s inherit_errexit

readonly SUCCESS=0
readonly FAILURE=1

# Source the require.sh library
source "$(dirname "$(readlink -f "$0")")/require.sh" || {
  echo "Error: Failed to source require.sh" >&2
  exit 1
}

######################################################################
# Display usage information
######################################################################
usage() {
  cat << EOF
Usage: ${0##*/} [options]

Options:
  -h, --help    Show this help message and exit
  -v, --verbose Enable verbose output
  -d, --debug   Enable debug output (set -x)
EOF
  exit "${SUCCESS}"
}

######################################################################
# Print error message and exit with failure status
######################################################################
die() {
  printf "Error: %s\n" "$1" >&2
  exit "${FAILURE}"
}

######################################################################
# Main function
######################################################################
main() {
  local verbose=0
  local debug_mode=0

  # Parse command line options
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -h | --help) usage ;;
      -v | --verbose) verbose=1 ;;
      -d | --debug) debug_mode=1 ;;
      *) die "Invalid option: $1" ;;
    esac
    shift
  done

  # Enable debug if requested
  if ((debug_mode)); then
    set -x
  fi

  require_commands markdownlint mdformat

  # Enable recursive globbing
  shopt -s globstar

  if ((verbose)); then
    echo "Running markdown formatter..."
  fi

  if ! mdformat -- **/*.md; then
    die "mdformat failed"
  fi

  if ((verbose)); then
    echo "Running markdown linter..."
  fi
  if ! markdownlint --fix -- **/*.md; then
    die "markdownlint failed"
  fi

  if ((verbose)); then
    echo "All markdown files linted successfully"
  fi

  exit "${SUCCESS}"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
